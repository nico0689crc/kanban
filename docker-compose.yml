version: '3.8'
services:
  #########################################
  #   Setup Database container
  #########################################
  database:
    container_name: kanban-database-dev
    image: mysql:8.3.0
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "${MYSQL_HOST_PORT}:${MYSQL_CONTAINER_PORT}"
    volumes:
      - kanban-dev-db:/var/lib/mysql
    networks:
      - kanban-server-dev
  #########################################
  #   Setup Backend container
  #########################################
  backend:
    depends_on:
      - database
    container_name: kanban-backend-dev
    image: ${DOCKER_HUB_USERNAME}/${DOCKER_HUB_BACKEND_IMAGE}:dev
    build:
      context: ./backend
      target: development
    environment:
      - BACKEND_CONTAINER_PORT=${BACKEND_CONTAINER_PORT}
      - FRONTEND_HOST_DOMAIN=${FRONTEND_HOST_DOMAIN}
      - BACKEND_HOST_DOMAIN=${BACKEND_HOST_DOMAIN}
      - DB_HOST=${MYSQL_HOST}
      - DB_PORT=${MYSQL_CONTAINER_PORT}
      - DB_NAME=${MYSQL_DATABASE}
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - JWT_KEY=${JWT_KEY}
      - JWT_EXPIRATION_TIME=${JWT_EXPIRATION_TIME}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDGRID_VERIFIED_EMAIL=${SENDGRID_VERIFIED_EMAIL}
      - EMAIL_FROM_ADMINISTRATOR=${EMAIL_FROM_ADMINISTRATOR}
      - USER_DEMO=${USER_DEMO}
      - PASSWORD_DEMO=${PASSWORD_DEMO}
    ports:
      - "${BACKEND_HOST_PORT}:${BACKEND_CONTAINER_PORT}"
    volumes:
      - type: bind
        source: ./backend
        target: /app
      - /app/node_modules
    command: npm run start
    networks:
      - kanban-server-dev
  #########################################
  #   Setup Frontend container
  #########################################
  # frontend:
  #   depends_on:
  #     - backend
  #   container_name: frontend-dev
  #   image: ${DOCKER_HUB_USERNAME}/${DOCKER_HUB_FRONTEND_IMAGE}:dev
  #   build:
  #     context: ./frontend
  #     target: development
  #   environment:
  #     - NEXT_PUBLIC_BACKEND_HOST_DOMAIN=${BACKEND_HOST_DOMAIN}
  #     - NEXT_PUBLIC_FRONTEND_HOST_DOMAIN=${FRONTEND_HOST_DOMAIN}
  #     - NEXT_PUBLIC_USER=${USER_DEMO}
  #     - NEXT_PUBLIC_PASSWORD=${PASSWORD_DEMO}
  #   ports:
  #     - "${FRONTEND_HOST_PORT}:${FRONTEND_CONTAINER_PORT}"
  #   volumes:
  #     - type: bind
  #       source: ./frontend
  #       target: /app
  #   command: npm run dev
volumes:
  kanban-dev-db:
networks:
  kanban-server-dev:
