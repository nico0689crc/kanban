version: '3.8'
services:

#########################################
#   Setup MYSQL container
#########################################
  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql
    networks:
      - backend

#########################################
#   Setup server container
#########################################
  server:
    depends_on:
      - mysqldb     
    build: ./server
    env_file: ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - DB_HOST=$MYSQLDB_HOST
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - DB_NAME=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
      - NODE_ENV=$NODE_ENV
      - JWT_KEY=$JWT_KEY
      - JWT_EXPIRATION_TIME=$JWT_EXPIRATION_TIME
      - CLIENT_API_BASE_URL=$CLIENT_API_BASE_URL
      - CLIENT_BASE_URL=$CLIENT_BASE_URL
    networks:
      - backend
      - frontend
    stdin_open: true
    tty: true

#########################################
#   Setup client container
#########################################
  client:
    depends_on:
      - server
    build:
      context: ./client
      args:
        - REACT_APP_API_BASE_URL=$CLIENT_API_BASE_URL
    ports:
      - $REACT_LOCAL_PORT:$REACT_DOCKER_PORT
    networks:
      - frontend  

volumes: 
  db:
networks:
  backend:
  frontend: